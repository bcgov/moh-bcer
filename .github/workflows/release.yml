name: BCER Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version of the app (e.g. v1.2.3)'
        required: true
      environment:
        description: 'Environment (development | staging | production)'
        required: true
        default: 'development'
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14.17.6'
    - name: Package App
      run: VERSION=${{ github.event.inputs.version }} ENVIRONMENT=${{ github.event.inputs.environment }} make package-build
    - name: Create Github Release
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: ${{ github.event.inputs.environment != 'production'}}
        name: ${{ github.event.inputs.version }}-${{ github.event.inputs.environment }}
        tag_name: ${{ github.event.inputs.version }}-${{ github.event.inputs.environment }}
        files: |
          dist/*/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Send Slack Notification
      uses: 8398a7/action-slack@v3
      env:
        VERSION: ${{ github.event.inputs.version }}
        ENVIRONMENT: ${{ github.event.inputs.environment }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      with:
        status: custom
        custom_payload: |
          {
            text: `New ${ process.env.ENVIRONMENT } release ready: ${process.env.VERSION}`,
            attachments: [{
              "author_name": "Github",
              fallback: "fallback",
              color: "good",
              title: "New release",
              text: "Created",
              fields: [{
                title: "Author",
                value: process.env.GITHUB_ACTOR,
                short: true
              },
              {
                title: "Url",
                value: `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/releases/tag/${process.env.VERSION}-${process.env.ENVIRONMENT}`,
                short: true
              },
              {
                title: "Environment",
                value: process.env.ENVIRONMENT,
                short: false
              },
              {
                title: "Version",
                value: process.env.VERSION,
                short: false
              }],
              actions: [{
              }]
            }]
          }
