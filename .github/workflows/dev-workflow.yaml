name: Dev-Workflow
on:
  workflow_dispatch:
    inputs:
       environment:
        description: 'Environment to deploy to'
        type: environment
        required: true
       version:
        description: 'Version Number'
        required: false
  # push:
  #   branches:
  #     - main
  # pull_request:

concurrency: ${{ github.event.inputs.environment }}

env:
  APP_IMAGE: ${{ secrets.APP_IMAGE }}
  IMAGE_ID: ${{ secrets.AWS_ECR_URI }}
  IMAGE_NAME: bcer-api
  TF_VERSION: 1.2.2
  TG_VERSION: 0.37.1
  UBUNTU_VERSION: ubuntu-22.04
  TG_SRC_PATH: Terraform
  TFC_WORKSPACE: ${{ github.event.inputs.environment }}
  BCER_TAGS: ${{ secrets.BCER_TAGS }}
  ACTIONS_REPO_CHECKOUT: actions/checkout@v3
  ACTIONS_CONFIG_AWS_CREDS: aws-actions/configure-aws-credentials@v2
  ACTIONS_ECR_LOGIN: aws-actions/amazon-ecr-login@v1
  ACTIONS_CACHE: actions/cache@v3
  ACTIONS_DOCKER_BUILDX_SETUP: docker/setup-buildx-action@v2.5.0
  ACTIONS_DOCKER_BUILD_PUSH: docker/build-push-action@v4
  ACTIONS_TERRAFORM_SETUP: hashicorp/setup-terraform@v2.0.3
  ACTIONS_TERRAGRUNT: autero1/action-terragrunt@v1.3.1
  ACTIONS_ZAP_SCAN: zaproxy/action-baseline@v0.7.0

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  docker_push:
    name: docker push
    environment: ${{ github.event.inputs.environment }}
    runs-on: ${{ env.UBUNTU_VERSION }}
    permissions: write-all
    steps:
      - name: Check out the repo
        uses: "${{ env.ACTIONS_REPO_CHECKOUT }}"
        with:
          ref: FEATURE/aws
